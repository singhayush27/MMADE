# -*- coding: utf-8 -*-
"""GIT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b1Y2Uz4Kcyt1sM6fZlk8thHKJTSOWbKa
"""

pip install transformers

from transformers import AutoProcessor, AutoModelForCausalLM
from PIL import Image

processor = AutoProcessor.from_pretrained("microsoft/git-base-coco")
model = AutoModelForCausalLM.from_pretrained("microsoft/git-base-coco")

# Provide the local path to your image file
image_path = "25.jpg"
image = Image.open(image_path)

pixel_values = processor(images=image, return_tensors="pt").pixel_values

generated_ids = model.generate(pixel_values=pixel_values, max_length=50)
generated_caption = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]
print(generated_caption)

import os
import csv
from transformers import AutoProcessor, AutoModelForCausalLM
from PIL import Image

# Initialize the model and processor
processor = AutoProcessor.from_pretrained("microsoft/git-base-coco")
model = AutoModelForCausalLM.from_pretrained("microsoft/git-base-coco")

# Set the path to the folder containing images
image_folder = "/content/drive/MyDrive/ADR_test"

# Set the path to the output CSV file
output_csv = "image_captions.csv"

# Initialize an empty list to store the captions
captions = []

# Iterate over the image files in the folder
for image_filename in os.listdir(image_folder):
    # Create the full path to the image
    image_path = os.path.join(image_folder, image_filename)

    # Open the image
    image = Image.open(image_path)

    # Process the image and generate a caption
    pixel_values = processor(images=image, return_tensors="pt").pixel_values
    generated_ids = model.generate(pixel_values=pixel_values, max_length=50)
    generated_caption = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]

    # Store the image filename and generated caption
    captions.append({"Image": image_filename, "Caption": generated_caption})

# Save the captions to a CSV file
with open(output_csv, 'w', newline='') as csv_file:
    fieldnames = ["Image", "Caption"]
    writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(captions)

print(f"Captions saved to {output_csv}")

